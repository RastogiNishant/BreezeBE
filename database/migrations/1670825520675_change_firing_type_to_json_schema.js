'use strict'

/** @type {import('@adonisjs/lucid/src/Schema')} */
const Schema = use('Schema')
const Estate = use('App/Models/Estate')
const Promise = require('bluebird')
const Database = use('Database')
const x = `5 2
10 12
14 2
21 2
28 2
35 2
45 2
46 2
9 2
642 1
629 1
11 1
40 2
48 2
69 2
98 14
101 11
105 7
13 2
27 2
49 2
54 2
604 1
56 2
59 2
65 2
67 2
79 2
84 2
91 2
94 2
16 2
41 2
55 2
57 2
63 2
68 2
632 1
73 2
76 2
82 2
87 2
88 2
97 2
104 8
562 1
17 2
29 2
37 2
52 2
60 2
86 2
89 2
630 1
90 2
99 13
100 12
19 2
581 1
582 1
633 1
635 1
384 1
337 1
202 1
261 2
646 1
18 2
102 10
177 1
647 1
36 2
39 2
64 2
77 2
85 2
96 2
106 6
109 3
591 1
648 1
23 2
30 2
50 2
51 2
58 2
71 2
80 2
131 1
153 1
66 2
326 1
528 2
649 1
605 1
329 1
583 1
70 2
650 1
179 1
492 1
592 1
235 1
419 1
152 1
574 1
186 1
199 1
233 1
389 1
455 1
594 1
599 1
602 1
193 1
157 1
651 1
162 1
554 1
557 1
608 1
634 1
195 1
172 1
394 2
652 1
322 1
357 1
610 1
617 1
625 1
601 1
347 1
2480 2
364 1
447 1
653 1
606 1
273 3
558 1
609 1
560 1
561 1
563 1
484 1
559 1
565 1
566 1
620 1
627 1
595 1
615 1
571 1
572 1
573 1
577 1
578 1
579 1
170 1
176 1
178 1
451 1
163 1
198 1
204 1
206 1
239 1
508 1
552 1
585 1
600 1
616 1
192 1
197 1
531 3
515 2
15 2
123 1
155 1
486 1
509 1
586 1
618 1
622 1
237 1
125 1
151 1
139 1
159 1
165 1
171 1
181 1
194 1
225 1
242 1
300 1
323 1
588 1
603 1
623 1
723 1
724 1
576 1
133 1
241 1
308 1
318 1
319 1
348 1
146 1
383 1
458 1
553 1
607 1
205 1
336 1
726 1
154 1
158 1
188 1
339 1
440 1
457 1
488 1
489 1
533 1
580 1
589 1
613 1
628 1
180 1
147 1
309 1
335 1
349 1
459 1
485 1
495 1
496 1
556 1
596 1
621 1
173 1
190 1
203 1
234 1
376 1
490 1
499 1
514 1
593 1
619 1
722 1
725 1
31 2
53 2
92 2
93 2
324 1
446 1
332 1
448 2
20 2
498 1
500 1
358 1
494 1
83 2
141 1
196 1
209 1
183 1
189 1
2481 2
283 2
108 4
238 1
456 1
346 1
351 1
422 2
521 3
74 2
75 2
81 2
129 1
174 1
201 1
321 1
454 1
161 1
164 1
200 1
325 1
360 1
305 1
227 1
140 1
247 1
304 1
306 1
317 1
328 1
345 1
373 1
148 1
167 1
491 1
511 1
513 1
520 3
510 1
437 2
2 3
507 1
636 1
638 1
269 3
462 2
361 1
363 1
626 1
639 1
640 1
641 1
12 2
22 2
24 2
32 2
33 2
34 2
42 2
43 2
44 2
61 2
62 2
72 2
103 9
6 5
25 2
26 2
38 2
47 2
78 2
107 5
110 2
115 1
124 1
121 1
228 1
310 1
334 1
543 1
122 1
145 1
136 1
169 1
555 1
584 1
587 1
597 1
624 1
637 1
315 1
411 2
142 1
564 1
567 1
182 1
461 1
487 1
497 1
143 1
168 1
570 1
191 1
240 1
414 1
320 1
327 1
598 1
611 1
258 1
316 1
569 1
575 1
7 1
568 1
112 1
113 1
116 1
359 1
117 1
119 1
114 1
727 2
126 1
127 1
128 1
130 1
135 1
132 1
137 1
149 1
144 1
138 1
150 1
156 1
160 1
166 1
175 1
590 1
184 1
207 1
210 1
208 1
236 1
211 1
311 1
313 1
330 1
362 1
350 1
460 1
612 1
187 1
263 1
118 1
185 1
614 1
2482 2
2484 2
2485 2
631 1
2479 2
120 1
134 1
2483 2
2486 2
2487 2
`

class ChangeFiringTypeToJsonSchema extends Schema {
  async up() {
    /*
    const splits = x.split('\n')
    Promise.map(splits, async (split) => {
      const row = split.match(/^([0-9]+) ([0-9]+)$/)
      if (row) {
        await Estate.query().where('id', row[1]).update({ firing: row[2] })
      }
    })
    
    const estates = await Estate.query()
      .select('id')
      .select('firing')
      .whereNotNull('firing')
      .fetch()
    */
    this.table('estates', (table) => {
      //table.dropColumn('firing')
      table.specificType('firing1', 'INT[]')
    })
    //await Database.raw(`Update estates set firing1=ARRAY[firing]`)
    /*
      await Estate.query()
        .where('id', estate.id)
        .update({ firing1: [estate.firing] })*/
  }

  down() {
    this.table('estates', (table) => {
      // reverse alternations
      table.dropColumn('firing1')
      //table.integer('firing')
    })
  }
}

module.exports = ChangeFiringTypeToJsonSchema
