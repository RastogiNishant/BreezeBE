components:
  schemas:
    TaskFilterSchema:
      type: object
      properties:
        page:
          type: number
          description: don't pass or pass = -1 for no pageniation
          example: 1
        limit:
          type: number
          description: don't pass or pass = -1 for no pageniation
          example: 10
        global:
          properties:
            matchMode:
              type: string
              value: "contains"
            value:
              type: string
              example: "berlin"
        property_id:
          type: object
          properties:
            operator:
              type: string
              enum: ["or", "and"]
              example: "or"
            constraints:
              type: array
              items:
                type: object
                properties:
                  matchMode:
                    type: string
                    enum: ["equals", "notEquals", "gt", "lt", "gte", "lte"]
                    example: "startsWith"
                  value:
                    type: string
                    example: "example@email.com"
        status:
          properties:
            matchMode:
              type: string
              value: "in"
            value:
              type: [string]
              example:
                ["New", "In Progress", "Unresolved", "Resolved", "Closed"]
        active_task:
          properties:
            operator:
              type: string
              enum: ["or", "and"]
              example: "or"
            constraints:
              type: array
              items:
                type: object
                properties:
                  matchMode:
                    type: string
                    enum: ["equals", "notEquals", "gt", "lt", "gte", "lte"]
                    example: "startsWith"
                  value:
                    type: number
                    example: 5
        urgency:
          properties:
            matchMode:
              type: string
              value: "in"
            value:
              type: [string]
              example: ["Low", "Normal", "High", "Urgent"]
        breeze_type:
          properties:
            matchMode:
              type: string
              value: "in"
            value:
              type: boolean
              example: true
          description: nullable
        tenant:
          type: object
          properties:
            operator:
              type: string
              enum: ["or", "and"]
              example: "or"
            constraints:
              type: array
              items:
                type: object
                properties:
                  matchMode:
                    type: string
                    enum:
                      [
                        "startsWith",
                        "contains",
                        "notContains",
                        "endsWith",
                        "equals",
                        "notEquals",
                        "gt",
                        "lt",
                        "gte",
                        "lte",
                      ]
                    example: "startsWith"
                  value:
                    type: string
                    example: "Jhon"
          description: Only for used for getting all estates
        city:
          type: object
          properties:
            operator:
              type: string
              enum: ["or", "and"]
              example: "or"
            constraints:
              type: array
              items:
                type: object
                properties:
                  matchMode:
                    type: string
                    enum:
                      [
                        "startsWith",
                        "contains",
                        "notContains",
                        "endsWith",
                        "equals",
                        "notEquals",
                        "gt",
                        "lt",
                        "gte",
                        "lte",
                      ]
                    example: "startsWith"
                  value:
                    type: string
                    example: "berlin"
        address:
          type: object
          properties:
            operator:
              type: string
              enum: ["or", "and"]
              example: "or"
            constraints:
              type: array
              items:
                type: object
                properties:
                  matchMode:
                    type: string
                    enum:
                      [
                        "startsWith",
                        "contains",
                        "notContains",
                        "endsWith",
                        "equals",
                        "notEquals",
                        "gt",
                        "lt",
                        "gte",
                        "lte",
                      ]
                    example: "startsWith"
                  value:
                    type: string
                    example: "berlin"
        phone_number:
          type: object
          properties:
            operator:
              type: string
              enum: ["or", "and"]
              example: "or"
            constraints:
              type: array
              items:
                type: object
                properties:
                  matchMode:
                    type: string
                    enum:
                      [
                        "startsWith",
                        "contains",
                        "notContains",
                        "endsWith",
                        "equals",
                        "notEquals",
                        "gt",
                        "lt",
                        "gte",
                        "lte",
                      ]
                    example: "startsWith"
                  value:
                    type: string
                    example: "19"
        email:
          type: object
          properties:
            operator:
              type: string
              enum: ["or", "and"]
              example: "or"
            constraints:
              type: array
              items:
                type: object
                properties:
                  matchMode:
                    type: string
                    enum:
                      [
                        "startsWith",
                        "contains",
                        "notContains",
                        "endsWith",
                        "equals",
                        "notEquals",
                        "gt",
                        "lt",
                        "gte",
                        "lte",
                      ]
                    example: "startsWith"
                  value:
                    type: string
                    example: "example@email.com"
        contract_end:
          type: object
          properties:
            operator:
              type: string
              enum: ["or", "and"]
              example: "or"
            constraints:
              type: array
              items:
                type: object
                properties:
                  matchMode:
                    type: string
                    enum: ["dateIs", "dateIsNot", "dateBefore", "dateAfter"]
                    example: "dateIs"
                  value:
                    type: string
                    example: "2022-08-07T18:30:00.000Z"
        archived_status:
          type: array
          items:
            type: number
          example: [1, 2, 3, 4, 5]
          description: "1: STATUS_NEW, 2: STATUS_INPROGRESS, 3:STATUS_UNRESOLVED, 4:STATUS_RESOLVED, 5:STATUS_CLOSED,"
