components:
  schemas:
    TaskFilterSchema:
      type: object
      properties:
        only_inside_breeze:
          type: boolean
        only_outside_breeze:
          type: boolean
        page:
          type: number
          description: don't pass or pass = -1 for no pageniation
          example: 1
        limit:
          type: number
          description: don't pass or pass = -1 for no pageniation
          example: 10
        status:
          properties:
            matchMode:
              type: string
              value: "in"
            value:
              type: [string]
              example:
                ["New", "In Progress", "Unresolved", "Resolved", "Closed"]
        urgency:
          properties:
            matchMode:
              type: string
              value: "in"
            value:
              type: [string]
              example: ["Low", "Normal", "High", "Urgent"]
        tenant_id:
          type: array
          items:
            type: number
          example: [1, 2]
          description: Only for used for getting all estates
        city:
          type: object
          properties:
            operator:
              type: string
              enum: ["or", "and"]
              example: "or"
            constraints:
              type: object
              properties:
                matchMode:
                  type: string
                  enum:
                    [
                      "startsWith",
                      "contains",
                      "notContains",
                      "endsWith",
                      "equals",
                      "notEquals",
                      "gt",
                      "lt",
                      "gte",
                      "lte",
                    ]
                  example: "startsWith"
                value: 
                  type: string
                  example: 'berlin' 
        address:
          type: object
          properties:
            operator:
              type: string
              enum: ["or", "and"]
              example: "or"
            constraints:
              type: object
              properties:
                matchMode:
                  type: string
                  enum:
                    [
                      "startsWith",
                      "contains",
                      "notContains",
                      "endsWith",
                      "equals",
                      "notEquals",
                      "gt",
                      "lt",
                      "gte",
                      "lte",
                    ]
                  example: "startsWith"
                value: 
                  type: string
                  example: 'berlin'                    
        archived_status:
          type: array
          items:
            type: number
          example: [1, 2, 3, 4, 5]
          description: "1: STATUS_NEW, 2: STATUS_INPROGRESS, 3:STATUS_UNRESOLVED, 4:STATUS_RESOLVED, 5:STATUS_CLOSED,"