const data15 = [
  [13.3773, 52.514411],
  [13.377226, 52.514374],
  [13.37703, 52.5143],
  [13.376491, 52.514109],
  [13.3763, 52.514053],
  [13.375978, 52.513622],
  [13.375565, 52.513565],
  [13.3753, 52.513451],
  [13.375138, 52.513462],
  [13.374401, 52.513401],
  [13.3743, 52.513411],
  [13.374199, 52.513401],
  [13.37396, 52.5133],
  [13.373671, 52.512929],
  [13.3733, 52.512383],
  [13.373254, 52.512346],
  [13.373226, 52.5123],
  [13.372565, 52.512035],
  [13.3723, 52.51195],
  [13.371922, 52.511922],
  [13.371629, 52.511971],
  [13.3713, 52.51193],
  [13.37091, 52.51169],
  [13.370547, 52.5113],
  [13.370467, 52.511133],
  [13.370552, 52.510552],
  [13.370503, 52.5103],
  [13.370422, 52.510178],
  [13.3703, 52.510103],
  [13.369998, 52.509998],
  [13.369694, 52.509906],
  [13.3693, 52.509747],
  [13.368961, 52.509639],
  [13.36841, 52.5093],
  [13.368393, 52.509207],
  [13.3683, 52.508858],
  [13.368108, 52.508492],
  [13.368102, 52.5083],
  [13.368093, 52.508093],
  [13.367871, 52.507729],
  [13.367866, 52.5073],
  [13.367629, 52.506971],
  [13.3673, 52.506785],
  [13.366832, 52.506832],
  [13.366662, 52.506938],
  [13.3663, 52.50704],
  [13.365804, 52.506796],
  [13.365769, 52.506769],
  [13.3653, 52.506428],
  [13.365231, 52.506369],
  [13.365127, 52.5063],
  [13.365185, 52.506185],
  [13.3653, 52.506006],
  [13.365705, 52.505705],
  [13.365851, 52.505749],
  [13.3663, 52.505664],
  [13.366496, 52.505496],
  [13.366608, 52.5053],
  [13.366606, 52.504994],
  [13.3663, 52.504411],
  [13.366261, 52.504339],
  [13.366273, 52.5043],
  [13.366269, 52.504269],
  [13.3663, 52.504197],
  [13.36658, 52.50402],
  [13.366839, 52.503839],
  [13.3673, 52.503635],
  [13.367557, 52.503557],
  [13.367942, 52.503658],
  [13.3683, 52.503614],
  [13.368462, 52.503462],
  [13.368531, 52.5033],
  [13.368485, 52.503115],
  [13.3683, 52.502916],
  [13.367864, 52.502864],
  [13.36767, 52.50293],
  [13.3673, 52.502793],
  [13.367049, 52.502551],
  [13.366971, 52.5023],
  [13.367193, 52.502193],
  [13.3673, 52.501955],
  [13.367655, 52.501945],
  [13.367847, 52.501847],
  [13.3683, 52.501843],
  [13.368716, 52.501716],
  [13.36894, 52.50166],
  [13.3693, 52.50156],
  [13.369457, 52.501457],
  [13.369537, 52.5013],
  [13.369541, 52.501059],
  [13.3693, 52.500533],
  [13.369156, 52.500444],
  [13.368873, 52.5003],
  [13.369067, 52.500067],
  [13.3693, 52.499484],
  [13.36934, 52.49934],
  [13.369358, 52.4993],
  [13.369503, 52.499097],
  [13.369738, 52.498738],
  [13.370207, 52.4983],
  [13.370265, 52.498265],
  [13.3703, 52.498235],
  [13.370377, 52.498223],
  [13.371024, 52.498024],
  [13.3713, 52.497993],
  [13.371752, 52.497752],
  [13.371989, 52.497611],
  [13.3723, 52.497432],
  [13.37239, 52.49739],
  [13.372726, 52.4973],
  [13.373173, 52.497173],
  [13.3733, 52.497128],
  [13.37343, 52.49717],
  [13.37351, 52.4973],
  [13.373855, 52.497745],
  [13.373855, 52.497855],
  [13.37399, 52.4983],
  [13.374139, 52.498461],
  [13.3743, 52.498509],
  [13.37453, 52.49853],
  [13.37507, 52.49853],
  [13.3753, 52.498556],
  [13.375597, 52.498597],
  [13.375653, 52.4983],
  [13.375869, 52.497869],
  [13.3763, 52.497653],
  [13.376725, 52.497725],
  [13.376903, 52.497697],
  [13.3773, 52.497852],
  [13.377689, 52.497689],
  [13.378007, 52.497593],
  [13.3783, 52.497489],
  [13.378486, 52.497486],
  [13.379015, 52.497585],
  [13.3793, 52.497582],
  [13.379556, 52.497556],
  [13.380154, 52.497446],
  [13.3803, 52.497429],
  [13.380627, 52.497627],
  [13.380835, 52.497765],
  [13.3813, 52.497977],
  [13.381518, 52.498082],
  [13.382043, 52.4983],
  [13.382179, 52.498421],
  [13.3823, 52.498534],
  [13.382764, 52.498836],
  [13.383196, 52.4993],
  [13.383227, 52.499373],
  [13.3833, 52.499561],
  [13.383521, 52.500079],
  [13.383596, 52.5003],
  [13.384098, 52.500502],
  [13.3843, 52.500517],
  [13.384497, 52.500497],
  [13.385259, 52.500341],
  [13.3853, 52.500336],
  [13.385334, 52.500334],
  [13.385429, 52.5003],
  [13.385969, 52.499969],
  [13.3863, 52.499918],
  [13.386542, 52.500058],
  [13.387146, 52.500146],
  [13.3873, 52.500197],
  [13.387404, 52.500196],
  [13.387541, 52.5003],
  [13.387806, 52.500794],
  [13.387823, 52.500823],
  [13.388094, 52.5013],
  [13.388155, 52.501445],
  [13.3883, 52.50182],
  [13.388457, 52.502143],
  [13.388568, 52.5023],
  [13.388732, 52.502732],
  [13.388773, 52.502827],
  [13.388926, 52.5033],
  [13.389007, 52.503593],
  [13.3893, 52.504295],
  [13.389301, 52.504299],
  [13.389302, 52.5043],
  [13.389301, 52.504301],
  [13.3893, 52.504302],
  [13.389298, 52.504302],
  [13.388596, 52.504596],
  [13.3883, 52.504581],
  [13.387957, 52.504957],
  [13.387865, 52.5053],
  [13.387859, 52.505741],
  [13.387995, 52.505995],
  [13.387979, 52.5063],
  [13.388104, 52.506496],
  [13.3883, 52.506685],
  [13.388625, 52.506975],
  [13.388864, 52.5073],
  [13.388527, 52.507527],
  [13.3883, 52.507874],
  [13.388069, 52.508069],
  [13.387877, 52.5083],
  [13.387498, 52.508498],
  [13.3873, 52.508717],
  [13.386872, 52.508872],
  [13.386698, 52.508902],
  [13.3863, 52.50901],
  [13.386086, 52.509086],
  [13.385703, 52.5093],
  [13.385614, 52.509614],
  [13.3855, 52.5101],
  [13.385447, 52.5103],
  [13.385346, 52.510346],
  [13.3853, 52.510371],
  [13.385132, 52.510468],
  [13.384695, 52.510695],
  [13.3843, 52.510996],
  [13.384064, 52.511064],
  [13.383475, 52.511125],
  [13.3833, 52.511162],
  [13.383204, 52.511204],
  [13.383031, 52.5113],
  [13.382652, 52.511652],
  [13.3823, 52.511784],
  [13.381976, 52.511976],
  [13.381555, 52.5123],
  [13.38142, 52.51242],
  [13.3813, 52.512479],
  [13.381102, 52.512498],
  [13.380496, 52.512496],
  [13.3803, 52.51252],
  [13.379842, 52.512842],
  [13.379413, 52.5133],
  [13.379363, 52.513363],
  [13.3793, 52.513415],
  [13.379016, 52.513584],
  [13.378736, 52.513736],
  [13.3783, 52.514069],
  [13.378167, 52.514167],
  [13.377721, 52.5143],
  [13.377374, 52.514374],
  [13.3773, 52.514411],
]

function distance(lat1, lon1, lat2, lon2) {
  const toRad = (Value) => (Value * Math.PI) / 180

  const R = 6371 // km
  const dLat = toRad(lat2 - lat1)
  const dLon = toRad(lon2 - lon1)
  lat1 = toRad(lat1)
  lat2 = toRad(lat2)

  const a =
    Math.sin(dLat / 2) * Math.sin(dLat / 2) +
    Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2)
  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))

  return R * c * 1000
}

function initMap() {
  const map = new google.maps.Map(document.getElementById('map'), {
    zoom: 14,
    center: {
      lat: 52.50528218248411,
      lng: 13.37717506347658,

      __proto__: Object,
    },
    mapTypeId: 'terrain',
  })

  // Construct the polygon.
  const zone = new google.maps.Polygon({
    paths: data15.map(([lng, lat]) => ({ lng, lat })),
    strokeWeight: 0,
    fillColor: '#FF0000',
    fillOpacity: 0.35,
  })

  zone.setMap(map)

  new google.maps.Circle({
    strokeWeight: 0,
    fillColor: '#FF0000',
    fillOpacity: 0.35,
    map,
    center: { lng: 13.3986249, lat: 52.5013088 },
    radius: 5000,
  })

  window.points.forEach(({ lat, lng }) => {
    new google.maps.Marker({
      position: { lat: parseFloat(lat), lng: parseFloat(lng) },
      map,
      title: '',
    })
  })

  let points = []
  map.addListener('click', (mapsMouseEvent) => {
    const point = mapsMouseEvent.latLng.toJSON()
    console.log(point)
    points.push(point)
    if (points.length >= 2) {
      console.log(distance(points[0].lat, points[0].lng, points[1].lat, points[1].lng))
      points = []
    }
  })
}
